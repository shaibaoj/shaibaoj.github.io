"use strict";define(function(require){var app=require("app");require("common/directives/model/dingdone-node"),app.directive("dingdoneOperator",function($q,config,http,utils,modelService){return{scope:{instance:"=",target:"=",field:"=",key:"=",funcName:"="},replace:!0,templateUrl:"common/directives/model/dingdone-operator.html",link:function($scope){var vm=$scope.vm={};angular.extend(vm,{init:function(){vm.initFieldCache(),vm.getFunctionList().then(function(list){if($scope.field){var operator=$scope.field.operator;"+"==operator||"-"==operator||"*"==operator||"/"==operator?vm.currentFunc="math":vm.currentFunc=$scope.field.operator,angular.forEach(list,function(func){func["function"]==vm.currentFunc&&vm.chooseFunc(func)})}else $scope.field={};vm.filterOperatorlist()})},fieldList:[],fieldCache:{},fieldTypeCache:{},initFieldCache:function(){angular.forEach($scope.target?$scope.target.fields:[],function(field){vm.fieldCache["target."+field.key]=field;var obj=angular.copy(field);obj.key="target."+field.key,obj.name=field.name+"("+$scope.target.name+")",vm.fieldList.push(obj),vm.fieldTypeCache?"":vm.fieldTypeCache={},vm.fieldTypeCache[field.key]=field.data_type}),angular.forEach($scope.instance?$scope.instance.fields:[],function(field){if($scope.instance.id){vm.fieldCache["instance."+field.key]=field;var obj=angular.copy(field);obj.key="instance."+field.key,obj.name=field.name+"("+$scope.instance.name+")",vm.fieldList.push(obj),vm.fieldTypeCache?"":vm.fieldTypeCache={},vm.fieldTypeCache[field.key]=field.data_type}else{var key=$scope.instance.key;vm.fieldCache[key+"."+field.key]=field;var _obj=angular.copy(field);_obj.key=key+"."+field.key,_obj.name=field.name+"("+$scope.instance.name+")",vm.fieldList.push(_obj),vm.fieldTypeCache?"":vm.fieldTypeCache={},vm.fieldTypeCache[field.key]=field.data_type}})},filterOperatorlist:function(){var key=$scope.key;this.currentfuncs=[],console.log(vm.fieldTypeCache[key],"key"),angular.forEach(this.functions,function(func){var bool=!1;"nodes"==key?"remove"!=func["function"]&&"append"!=func["function"]||(bool=!0):vm.funcType[func["function"]].indexOf(vm.fieldTypeCache[key])>-1&&(console.log(vm.funcType[func["function"]],"当前函数支持字段",vm.fieldTypeCache[key],"当前字段type",key),bool=!0),bool&&vm.currentfuncs.push(func)})},chooseField:function(field,index){$scope.field.params?"":$scope.field.params=[],$scope.field.params[index]=field.key},chooseNode:function(node){$scope.field.params?"":$scope.field.params=["node"],$scope.field.params[2]=node.id},changeValue:function(value,index){var type=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"string";$scope.field.params?"":$scope.field.params=[],vm.check(value,type)?$scope.field.params[index]=value:$scope.field.params[index]=""},check:function(value,type){return"number"!=type||A.isNumber(value)},getFunctionList:function(){var defer=$q.defer(),_this=this,url=config.getAPI("hanshu","json");return http(url).then(function(json){_this.functions=json.result,_this.currentfunctionsDic=_this.initFunctionsDic(_this.functions),defer.resolve(_this.functions)}),defer.promise},initFunctionsDic:function(funcs){var _this2=this,result={};return angular.forEach(funcs,function(func){result[func["function"]]=func,func.scheme&&_this2.initParamsDic(func.scheme.parameters)}),result},initParamsDic:function(params){angular.forEach(params,function(param,index){param.currentParam=_.find(param.value_enums,function(eachValue){return!!vm.currentParams&&eachValue.value===vm.currentParams[index]})})},chooseFunc:function(func){this.currentFunc=func["function"],$scope.funcName=func.name,"math"==func["function"]?$scope.field.operator?"":$scope.field.operator="+":$scope.field.operator=func["function"],this.initCurrentFields(func["function"])},funcType:{append:["list","model_list"],remove:["list","model_list"],connect:["text","short_text"],math:["number"],update:["dict","image","file","video","sku","price","text_unit","date_area"]},initCurrentFields:function(func){this.currentFields=[],angular.forEach(vm.fieldList,function(item){vm.funcType[func].indexOf(item.data_type)>-1&&vm.currentFields.push(item)})}}),vm.init()}}})});