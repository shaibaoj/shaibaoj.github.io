"use strict";define(function(require){var app=require("app");require("moment");require("common/services/dingdone_selector_service"),require("common/services/dingdone_widget_service"),require("appmake/services/pageManagerService"),require("common/directives/model/dingdone-select-content-model"),app.directive("dingdoneCondition",function($q,config,http,utils,dingdoneSelectorService,dingdoneWidgetService,$stateParams,modelService,pageManagerService,PageParamesService){return{scope:{pageId:"=",model:"=",condition:"=",displayModel:"=",selectorMode:"@",url:"=",pageModelId:"=",datatypescache:"=",hiderefer:"=",notReset:"=",globalParams:"=",supportMember:"@",timestamp:"=",scope:"@",isPermission:"=",ignoreModel:"=",otherModels:"="},replace:!0,templateUrl:function(tElement,tAttrs){var singleModel="common/directives/model/dingdone-condition.html",multiModel="common/directives/model/dingdone-condition-withmodel.html";return tAttrs.displayModel?multiModel:singleModel},link:function($scope){var vm=$scope.vm={};angular.extend(vm,{listForShow:[],selector:{},init:function(isReset){var _this=this;if(isReset)$scope.condition={condition_mode:"all",cond:[]};else{var exist=$scope.condition;$scope.condition={condition_mode:exist&&exist.condition_mode||"all",cond:exist&&exist.cond||[]}}this.conditionList=angular.copy($scope.condition.cond),vm.memberConditionEnable=!1,vm.currentMemberCondition=null,$scope.model&&!$scope.model.id||$scope.ignoreModel?$q.all([this.getOperator()]).then(function(){_this.selector={},_this.handleModel($scope.model),vm.initFinish=!0}):$scope.model&&$scope.model.id&&$q.all([this.getOperator(),this.getSelector()]).then(function(){vm.initFinish=!0}),$scope.model&&$scope.supportMember&&this.getMemberCondition().then(function(){return vm.initMemberCondition()})},modelListCache:{},fieldTypeCache:{},dataTypesCache:$scope.datatypescache||{},handleModel:function(model){var _this=this;$scope.globalParams?dingdoneSelectorService.initGlobal({otherModels:$scope.otherModels,scope:$scope.scope||"filter"}).then(function(result){$scope.ignoreModel?(_this.selector=result,vm.globalParamsModel=vm.formatGlobalParams(result.fieldsInGlobal)):(_this.selector=result,angular.extend(_this.selector.dictionary,vm.doOperatorDic(model.fields,model.key)),vm.globalParamsModel=vm.formatGlobalParams(result.fieldsInGlobal),vm.modelListCache[model.key]=model)}):$scope.otherModels&&$scope.otherModels.length?dingdoneSelectorService.initOtherFields({otherModels:$scope.otherModels,scope:$scope.scope||"filter"}).then(function(result){vm.selector=result,vm.selector.dictionary?"":vm.selector.dictionary={},angular.extend(vm.selector.dictionary,vm.doOperatorDic(model.fields,model.key))}):(vm.selector.dictionary?"":vm.selector.dictionary={},angular.extend(vm.selector.dictionary,vm.doOperatorDic(model.fields,model.key))),$scope.ignoreModel||(vm.modelListCache[model.key]=model,angular.extend(this.dataTypesCache,vm.doDataTypeDic(model.fields,model.key))),this.selector.modelList||(this.selector.modelList=[]),angular.forEach(vm.conditionList,function(cond){"user.user_groups"==cond.key&&vm.getGroupList().then(function(grouplist){vm.hasDot(cond.value)&&(cond.model_id=vm.groupListCache[cond.value.split(",")[0]].associate_model_id,cond.content_id=cond.value.split(",")[1])})})},doDataTypeDic:function(arr,key){var result={};return angular.forEach(arr,function(operator){result[key?key+"."+operator.key:operator.key]=operator.data_type}),result},doOperatorDic:function(arr,key){var result={};return angular.forEach(arr,function(operator){result[key?key+"."+operator.key:operator.key]=operator.name}),result},nodeOperator:["image","image_list","sku_list"],getFieldsList:function(conditionData){if(conditionData.key&&conditionData.key.indexOf(".")>-1){var key0=conditionData.key.split(".")[0];return"unit_price"==key0?vm.fieldslist:vm.modelListCache[key0]?vm.modelListCache[key0].fields:[]}return $scope.model&&$scope.model.id?vm.fieldslist:$scope.model&&!$scope.model.id&&$scope.model.key?$scope.model.fields:[]},getOperator:function(){var defer=$q.defer(),_this=this;return dingdoneWidgetService.getConditionOperator().then(function(result){_this.operator=result,defer.resolve()}),defer.promise},getSelector:function(){var defer=$q.defer(),_this=this;return dingdoneSelectorService.init({ignoreModel:$scope.ignoreModel,pageId:$scope.pageId,model:$scope.model,otherModels:$scope.otherModels,pageModelId:$scope.pageModelId,scope:$scope.scope||"filter"}).then(function(result){vm.selector=result,angular.extend(_this.dataTypesCache,_this.doDataTypeDic(result.fieldsInModel.fields)),angular.forEach(vm.selector.quoteModel,function(model){_this.modelListCache[model.refer_key]={name:model.name,fields:model.fields,model_id:model.id},angular.extend(_this.dataTypesCache,_this.doDataTypeDic(model.fields,model.refer_key))}),$scope.globalParams&&(vm.globalParamsModel=vm.formatGlobalParams(result.fieldsInGlobal)),result.detail&&(_this.modelListCache.data={name:result.detail.name,fields:result.detail.fields,model_id:result.detail.id},angular.extend(_this.dataTypesCache,_this.doDataTypeDic(result.detail.fields,"data"))),vm.fieldslist=vm.selector.fieldsInModel.fields,defer.resolve()}),defer.promise},formatGlobalParams:function(data){var temp=angular.copy(data);return angular.forEach(temp,function(item){angular.forEach(item.params,function(param){if(param.key&&param.key.indexOf(".")>-1){var obj={};obj[param.key]=param.name,angular.extend(vm.selector.dictionary,obj);var arr=param.key.split(".");param.key=arr[1],item.key=arr[0]}}),item.fields=item.params,angular.extend(vm.dataTypesCache,vm.doDataTypeDic(item.fields,item.key))}),angular.forEach(temp,function(model){vm.modelListCache[model.key]={name:model.name,fields:model.fields}}),temp},changeConditionMode:function(mode){$scope.condition.condition_mode=mode},add:function(){($scope.ignoreModel||$scope.model)&&(vm.conditionList||(vm.conditionList=[]),vm.conditionList.push({cond_type:1}))},changeField:function(conditionData,fieldKey,field){if(delete conditionData.operator,delete conditionData.value,conditionData.key&&conditionData.key.indexOf(".")>-1){var arr=conditionData.key.split(".");arr&&2==arr.length&&conditionData.key.indexOf("unit_price")>-1&&(conditionData.key="")}if(conditionData.key&&conditionData.key.indexOf(".")>-1){if($scope.model&&"self"==$scope.model.id)conditionData.key=fieldKey;else{var key0=conditionData.key.split(".")[0];conditionData.key=key0+"."+fieldKey}this.dataTypesCache[conditionData.key]=field.data_type}else!$scope.model.id&&$scope.model.key?(conditionData.key=$scope.model.key+"."+fieldKey,this.dataTypesCache[conditionData.key]=field.data_type,"user_groups"!=fieldKey||(conditionData.operator="has",delete conditionData.model_id,delete conditionData.content_id)):"unit_price"==fieldKey?(conditionData.key=fieldKey+".now",this.dataTypesCache[conditionData.key]="number"):(conditionData.key=fieldKey,this.dataTypesCache[conditionData.key]=field.data_type)},getQuoteFieldName:function(key){var temp_key=key?key.split(".")[0]:"";return vm.modelListCache[temp_key]?vm.modelListCache[temp_key].name:""},changeSymbol:function(conditionData,operator){"boolean"==typeof operator?(conditionData.value=operator,conditionData.operator="="):conditionData.operator=operator},getCurrentOperatorList:function(fieldKey){var bool=void 0;if("unit_price.now"==fieldKey)return this.operator.list.number;if(fieldKey&&fieldKey.indexOf(".")>-1){var key0=fieldKey.split(".")[0],_bool=(fieldKey.split(".")[1],_.find(this.modelListCache[key0]?this.modelListCache[key0].fields:[],function(eachField){return eachField.key===(fieldKey&&fieldKey.indexOf(".")>-1?fieldKey.split(".")[1]:fieldKey)})),data_type=_bool&&_bool.data_type;return this.fieldTypeCache[fieldKey]=data_type,this.operator.list[data_type]}bool=_.find(vm.fieldslist,function(eachField){return eachField.key===(fieldKey&&fieldKey.indexOf(".")>-1?fieldKey.split(".")[1]:fieldKey)});var _data_type=bool&&bool.data_type;return this.fieldTypeCache[fieldKey]=_data_type,this.operator.list[_data_type]},changeValue:function(conditionData,flag){conditionData.value=flag,flag?conditionData.content_id="":(delete conditionData.model_id,delete conditionData.content_id),this.getGroupList()},selectContent:function(conditionData){utils.mdDialog({controller:"dingdoneSelectContentCtrl",templateUrl:"common/directives/model/dingdone-select-content-model.html",clickOutsideToClose:!0,locals:{modalData:conditionData.contentdata}}).then(function(data){conditionData.contentdata=data,conditionData.value=conditionData.value.split(",")[0]+","+data.content_id})},groupListCache:{},getGroupList:function(){var _this=this,defer=$q.defer();return this.groupList?defer.resolve(this.groupList):pageManagerService.getGroupList().then(function(data){var arr=data.data;_this.groupList={},angular.forEach(arr,function(group){_this.groupList[group.type]?"":_this.groupList[group.type]=[],_this.groupList[group.type].push(group),_this.groupListCache[group.id]=group}),defer.resolve(_this.groupList)}),defer.promise},getValue:function(value,index){var arr=value?value.split(","):[];return arr[index]},getCurrentMemberList:function(value){return this.groupList&&this.hasDot(value)?this.groupList.associate:this.groupList?this.groupList.system:[]},changeGroup:function(conditionData,group){this.hasDot(conditionData.value)?(conditionData.value=group.id+",",conditionData.model_id=group.associate_model_id,conditionData.content_id=""):(conditionData.value=group.id,delete conditionData.model_id,delete conditionData.content_id)},hasDot:function(key){return!!(key&&key.indexOf(",")>-1)},changeConditionValue:function(conditionData){conditionData.cond_type=1,conditionData.value=vm.selector.dictionary[conditionData.value]},changeCondType:function(conditionData,type){conditionData.cond_type=type},showPop:function(conditionData){if(conditionData.key&&conditionData.operator){var currentKey=(this.dataTypesCache[conditionData.key],conditionData.value),dataTypes=["number","list","short_text","number","datetime","price","address","text_unit","text","model_list","model"];dingdoneSelectorService.showPop({selector:this.selector,pageId:$scope.pageId,dataTypes:dataTypes,currentKey:currentKey,selectorMode:this.changeSelectMode(conditionData)}).then(function(data){conditionData.cond_type=2,conditionData.value=data.key,vm.updatePageParamsDic()})}},updatePageParamsDic:function(){$scope.pageId&&PageParamesService.getList($scope.pageId).then(function(list){angular.forEach(list,function(item){vm.selector.dictionary[item.key]=item.name})})},changeSelectMode:function(conditionData){var mode="condition";return $scope.globalParams&&conditionData.key.indexOf(".")>-1&&!function(){var arr=conditionData.key.split("."),bool=_.find(vm.globalParamsModel,function(eachField){return eachField.key===arr[0]});bool&&(mode="default")}(),mode},del:function(conditionIndex){utils.confirm({headTitle:"删除提醒",msg:"确定删除当前条件吗?"},function(sure){sure&&vm.conditionList.splice(conditionIndex,1)})},changeModel:function(conditionData,model,flag){model?"global"==flag?conditionData.key=model.key+".":"quote"==flag?conditionData.key=model.refer_key+".":"detail"==flag&&(conditionData.key="data."):conditionData.key=""},getMemberCondition:function(){var defer=$q.defer(),url=config.getAPI("dingdoneWidget.memberCondition").replace("{model_id}",$scope.model.id);return http(url).then(function(json){vm.memberCondition=json.result,defer.resolve()}),defer.promise},initMemberCondition:function(){var allKey=_.map(vm.memberCondition,function(eachCondition){return eachCondition.key+eachCondition.operator});if(this.conditionList.length){var last=this.conditionList[this.conditionList.length-1],lastKey=last&&last.key+last.operator,lastKeyIndex=_.indexOf(allKey,lastKey);lastKeyIndex>-1&&(vm.conditionList.splice(this.conditionList.length-1,1),vm.memberConditionEnable=!0,vm.currentMemberCondition=vm.memberCondition[lastKeyIndex])}},selectMemberCondition:function(item){vm.currentMemberCondition=item,this.setCondition()},setCondition:function(){$scope.condition.cond=angular.copy(vm.conditionList),vm.memberConditionEnable&&$scope.condition.cond.push(vm.currentMemberCondition||vm.memberCondition[0])}}),$scope.$watch("vm.dataTypesCache",function(newVal){$scope.datatypescache=newVal},!0),$scope.$watch("vm.conditionList",function(newVal){newVal&&vm.setCondition()},!0),$scope.$watch("model",function(newVal,oldVal){var isReset=newVal&&oldVal&&!angular.equals(newVal.id,oldVal.id);$scope.displayModel||$scope.notReset?vm.init():vm.init(!!isReset),$scope.notReset=!1},!0),$scope.$watch("timestamp",function(newVal,oldVal){newVal!=oldVal&&vm.init()})}}})});