"use strict";define(function(require){var app=require("app");require("common/services/record"),app.directive("dingdoneWeight",["record",function(record){return{restrict:"E",scope:{triggerEvent:"@",key:"@",params:"=",weight:"@"},replace:!0,templateUrl:"common/directives/weight.html",link:function(scope,el,attrs){var $slide=el.find(".weight-slide");scope.weightValues=[0,20,40,60,80,100],angular.extend(scope,{calWeightLevel:function(){return"weight-"+scope.weightValues[parseInt(scope.weight/20)]},toggle:function(){scope.isShow=!scope.isShow,scope.isShow&&scope.$emit("toggleWeight",scope.$id)},changeWeight:function(weight){scope.weight=weight,scope.changeCallback()},plus:function(){scope.weight++,scope.changeCallback()},minus:function(){scope.weight--,scope.changeCallback()},changeCallback:function(){$slide.slider("value",scope.weight),scope.ajax()},ajax:function(){record.updateRecordField(scope.weight,scope.key,scope.params)}}),scope.$watch("weight",function(newVal,oldVal){scope.weightLevel=scope.calWeightLevel()}),scope.$on("hideWeight",function(event,currentWeightScopeId){scope.isShow=scope.$id==currentWeightScopeId}),$slide.slider({value:+scope.weight,slide:function(event,ui){scope.weight=ui.value,scope.$digest()},stop:function(event,ui){scope.ajax()}})}}}])});
