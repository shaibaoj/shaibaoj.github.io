"use strict";define(function(require){var app=require("app");require("common/directives/superui/dingdone_widget_item"),app.directive("dingdoneWidget",["$timeout","$rootScope",function($timeout,$rootScope){return{scope:{dynamicCompile:"@",formScheme:"=",attributeValues:"=",displayTile:"=",callback:"&",pageId:"=",pageModelId:"=",modelId:"=",offsetTop:"@",direction:"@"},templateUrl:function(tElement,tAttrs){var commonTpl="common/directives/superui/dingdone_widget.html",tileTpl="common/directives/superui/dingdone_widget_tile.html";return tAttrs.displayTile?tileTpl:commonTpl},link:function($scope){var vm=$scope.vm={};$scope.attributeValues=$scope.attributeValues?$scope.attributeValues:{},angular.extend(vm,{isInit:!1,isShow:{},currentTab:{},init:function(formScheme){vm.isShow={},vm.formScheme=formScheme,vm.tabTitles=_.map(formScheme,function(eachFormScheme){return eachFormScheme.title}),this.tabForm(0),this.doDic()},tabForm:function($index){vm.currentFormSchemeIndex=$index,vm.currentFormScheme=vm.formScheme[$index],$rootScope.$broadcast("gettabInfo",$index)},doDic:function(){var dic={};angular.forEach(vm.formScheme,function(formSchemeItem){var secondLevel=formSchemeItem.children;angular.forEach(secondLevel,function(secondLevelItem){var attrs=secondLevelItem.children;angular.forEach(attrs,function(attrItem){dic[attrItem.id]=attrItem.attribute_key})})}),vm.dic=dic}}),$scope.$on("setTabbarIndex",function(event,idx){vm.tabForm(idx)});var unregisterWatch=$scope.$watch("formScheme",function(newVal,oldVal){newVal&&vm.init(newVal),$scope.dynamicCompile&&newVal&&unregisterWatch()})},controller:function($scope){this.pageId=$scope.pageId,this.pageModelId=$scope.pageModelId,this.modelId=$scope.modelId;var callback=function(params,resource){$scope.callback({info:{attrs:params,resource:resource}})};this.getValueWithId=function(id){var attribute_key=$scope.vm.dic[id];return this.getValue(attribute_key)},this.getValue=function(attribute_key){return $scope.attributeValues?$scope.attributeValues[attribute_key]:""},this.refreshView=function(params,resource,iscallback){$scope.attributeValues[params.attribute_key]=params.value,iscallback&&callback(params,resource),$scope.$broadcast("refreshView")},this.refreshViewWithLink=function(params,resource){callback&&callback(params,resource)},this.toggle=function(theLinkWidget){angular.forEach(theLinkWidget,function(widget,widgetId){$scope.vm.isShow[widgetId]=widget.enable}),$scope.$broadcast("toggleWidget",theLinkWidget)},this.getPageId=function(){return $scope.pageId},$scope.$watch("pageId",function(newVal,oldVal){$scope.pageId=newVal},!0)}}}])});