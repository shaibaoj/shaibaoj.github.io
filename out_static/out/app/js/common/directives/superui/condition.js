"use strict";define(function(require){var app=require("app");require("common/services/dingdone_selector_service"),require("common/directives/model/dingdone-condition"),app.directive("dingdoneWidgetCondition",function($compile,dingdoneSelectorService,utils){return{scope:{widget:"="},replace:!0,templateUrl:"common/directives/superui/condition.html",require:["?^dingdoneWidgetItem","?^dingdoneWidget"],link:function($scope,el,attrs,parentCtrl){var vm=$scope.vm={};parentCtrl[0],parentCtrl[1];angular.extend(vm,{typecache:{},config:$scope.widget.config,init:function(){$scope.widget.views.__meta__||($scope.widget.views.__meta__={}),$scope.widget.views.__meta__.__ui_control__||($scope.widget.views.__meta__.__ui_control__=[]),this.disposalToFed()},disposalToFed:function(){var data=$scope.widget.views.__meta__.__ui_control__[0]||{};vm.checked=!!data.style&&!!data.style.hidden,vm.condition={condition_mode:"and"==data.connector?"all":"any"};var conds=[];angular.forEach(data.conditions,function(cond){var obj={cond_type:1,modelId:vm.currentModel?vm.currentModel.id:"",key:cond.left_value&&cond.left_value.match(/\{\{(\S*)\}\}/)?cond.left_value.match(/\{\{(\S*)\}\}/)[1]:cond.left_value,value:cond.right_value&&cond.right_value.match(/\{\{(\S*)\}\}/)?cond.right_value.match(/\{\{(\S*)\}\}/)[1]:cond.right_value,operator:cond.op};conds.push(obj)}),vm.condition.cond=conds},disposalToView:function(){var conds=[];return angular.forEach(vm.condition.cond,function(val){if(val.key&&val.value&&val.operator){var obj={left_value:"{{"+val.key+"}}",right_value:"2"==val.cond_type?"{{"+val.value+"}}":val.value,op:val.operator,left_data_type:vm.typecache[val.key]};conds.push(obj)}}),{connector:"any"==vm.condition.condition_mode?"or":"and",conditions:conds,style:{hidden:vm.checked}}},setData:function(){$scope.widget.views.__meta__.__ui_control__=[vm.disposalToView()]}}),vm.init(),$scope.$watch("vm.checked",function(newVal,oldVal){vm.setData()},!0),$scope.$watch("vm.typecache",function(newVal,oldVal){vm.setData()},!0),$scope.$watch("vm.condition",function(newVal,oldVal){newVal&&vm.setData()},!0)}}})});