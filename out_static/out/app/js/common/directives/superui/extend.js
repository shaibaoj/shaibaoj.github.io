"use strict";define(function(require){var app=require("app");require("./unit"),app.directive("dingdoneWidgetExtend",function(LayoutService,utils,config,$q,http,PageDesignService,$compile,$timeout){return{scope:{widget:"="},replace:!0,templateUrl:"common/directives/superui/extend.html",require:["?^dingdoneWidgetItem","?^dingdoneWidget"],link:function($scope,el,attrs,parentCtrl){var vm=$scope.vm={},dingdoneWidget=(parentCtrl[0],parentCtrl[1]);angular.extend(vm,{areaCount:Object.keys($scope.widget.areaViewInfo).length,pageId:dingdoneWidget.pageId,pageModelId:dingdoneWidget.pageModelId,areaShowType:{frame_layout:"固定高度",linear_layout:"自适应"},columnType:{layout_1_cols:[0],layout_2_cols:[0,1],layout_3_cols:[0,1,2],layout_4_cols:[0,1,2,3]},VIEWS:$scope.widget.VIEWS,init:function(){vm.row.count();this.hasAreaView()||this.createArea()},changeAreaShowType:function(areaViewId,showType){this.VIEWS[areaViewId].view=showType},hasAreaView:function(){var areaIds=_.map($scope.widget.areaViewInfo,function(areaInfo){return areaInfo.view_id&&"undefined"!=typeof vm.VIEWS[areaInfo.view_id].subviews?1:0});return _.compact(areaIds).length},createArea:function(areaKey){var viewKeyHash={tile_widget:"extend_layout",indexpic_float_widget:"extend_float_layout",item_float_widget:"extend_float_layout",header_layout:"header_layout",content_layout:"linear_layout"};areaKey=areaKey||Object.keys($scope.widget.areaViewInfo)[0];var defer=$q.defer(),url=($scope.widget.areaViewInfo,config.getAdminAPI("getTemplate").replace("{view_key}",viewKeyHash[areaKey]));return http(url).then(function(json){json=json.result;var new_view_id=json.root_ids[0],aim=$scope.widget.areaViewInfo[areaKey];aim.view_id=new_view_id,angular.extend(vm.VIEWS,json.views),$scope.$emit("layoutCreate",areaKey,new_view_id),defer.resolve(new_view_id)}),defer.promise},supportAreaChange:function(){return vm.areaCount>1&&"row"==vm.attrType},isFirstArea:function(currentAreaKey){return Object.keys($scope.widget.areaViewInfo)[0]===currentAreaKey},changeArea:function(currentAreaViewId,lineIndex,aimAreaKey){var before=this.VIEWS[currentAreaViewId].subviews,lineViewId=before[lineIndex];before.splice(lineIndex,1);var areaViewId=$scope.widget.areaViewInfo[aimAreaKey].view_id,_this=this;areaViewId?(_this.VIEWS[areaViewId].subviews.push(lineViewId),$timeout(function(){_this.compileDom(lineViewId)},0)):this.createArea(aimAreaKey).then(function(newAreaViewId){_this.VIEWS[newAreaViewId].subviews.push(lineViewId),$timeout(function(){_this.compileDom(lineViewId)},0)})},createLine:function(viewKey){var _this=this,areaKey=Object.keys($scope.widget.areaViewInfo)[0],defer=$q.defer(),url=config.getAdminAPI("getTemplate").replace("{view_key}",viewKey);return http(url).then(function(json){json=json.result;var areaViewId=$scope.widget.areaViewInfo[areaKey].view_id,aim=_this.VIEWS[areaViewId].subviews;aim.push(json.root_ids[0]),angular.extend(_this.VIEWS,json.views),$scope.$emit("listenAttrChange",{eventName:"addExtendRow",rowId:json.root_ids[0],areaViewId:areaViewId,VIEWS:_this.VIEWS,areaKey:areaKey}),defer.resolve()}),defer.promise},deleteLine:function(areaViewId,rowLayoutKey,$index,lineViewId,currentAreaKey){var _this=this;utils.confirm({headTitle:"删除提示",msg:"确定删除该行吗?"},function(sure){sure&&(_this.VIEWS[areaViewId][rowLayoutKey].splice($index,1),$scope.$emit("listenAttrChange",{eventName:"delExtendRow",area_view_id:areaViewId,row_layout_key:rowLayoutKey,VIEWS:_this.VIEWS,line_view_id:lineViewId,current_area_key:currentAreaKey}))})},addField:function(columnViewId){var _this=this;LayoutService.showWidgetPop($scope.widget.widgetType||"listui").then(function(json){var new_view_id=json.app_view_id,aim=_this.VIEWS[columnViewId].subviews;aim.push(new_view_id),_this.VIEWS[new_view_id]=angular.extend(angular.copy(json.default_attrs),{__meta__:{name:json.name}}),$scope.$emit("listenAttrChange",{eventName:"addField",new_view_id:new_view_id,columnViewId:columnViewId,VIEWS:_this.VIEWS})})},dragstart:function(unitViewId,$index){this.dragViewId=unitViewId,this.dragIndex=$index},moved:function(columnViewId,unitViewId,$index){var viewIds=vm.VIEWS[columnViewId].subviews,firstFind=_.indexOf(viewIds,this.dragViewId);firstFind<this.dragIndex?viewIds.splice(this.dragIndex+1,1):viewIds.splice($index,1)},compileDom:function(lineViewId){var dom='<dingdone-widget class="form-horizontal page-id="vm.pageId" page-model-id="vm.pageModelId" common min_height_0" form-scheme="vm.form_scheme" dynamic-compile="true" attribute-values="vm.attribute_values" callback="vm.previewCallback( info )"></dingdone-widget>';$compile(dom)($scope).appendTo(el.find(".dingdone-widget-placeholder-"+lineViewId).empty())},confirm:function(tip){var defer=$q.defer();return utils.confirm({headTitle:"删除提示",msg:tip},function(sure){sure&&defer.resolve()}),defer.promise},getFormScheme:function(triggerViewId,parentViewId,lineViewId){var defer=$q.defer(),view_key=vm.VIEWS[triggerViewId].view,url=config.getAdminAPI("views.layoutViews").replace("{view_key}",view_key);return http(url,{method:"post",data:{parent_view:vm.VIEWS[parentViewId]}}).then(function(json){if(!+json.error_code){var form_scheme=json.result.form_scheme;vm.form_scheme=form_scheme,vm.attribute_values=vm.VIEWS[triggerViewId],vm.currentViewKey=view_key,vm.compileDom(lineViewId),vm.currentLineViewId=lineViewId,defer.resolve()}}),defer.promise},refreshAttrBox:function(triggerViewId,parentViewId,lineViewId){var hash={row:"currentLineViewId",column:"currentColumnViewId",unit:"currentUnitViewId"};if(triggerViewId===vm.triggerViewId){vm.triggerViewId=null;for(var typeKey in hash){var varName=hash[typeKey];vm[varName]=null}}else{vm.triggerViewId=triggerViewId;for(var _typeKey in hash){var _varName=hash[_typeKey];vm[_varName]=vm.attrType===_typeKey?triggerViewId:null}vm["loading_"+triggerViewId]=!1,vm.getFormScheme(triggerViewId,parentViewId,lineViewId).then(function(){switch(vm["loading_"+triggerViewId]="complate",vm.attrType){case"row":vm.currentLineViewId=triggerViewId;break;case"column":vm.currentColumnViewId=triggerViewId;break;case"unit":vm.currentUnitViewId=triggerViewId}})}},row:{count:function count(){var count=0;angular.forEach($scope.widget.areaViewInfo,function(currentArea){count+=currentArea.view_id&&$scope.widget.VIEWS[currentArea.view_id].subviews&&$scope.widget.VIEWS[currentArea.view_id].subviews.length}),this.totalCount=+count,console.log("totalCount",this.totalCount)},add:function(viewKey){var _this=this,max=$scope.widget.rowLimit;vm.lineCount>=max?utils.error("已达到扩展行上限"):vm.hasAreaView()?vm.createLine(viewKey).then(function(){return _this.count()}):vm.createArea().then(function(){vm.createLine(viewKey).then(function(){return _this.count()})})},refreshAttrBox:function(parentViewId,lineViewId){vm.attrType="row",vm.refreshAttrBox(lineViewId,parentViewId,lineViewId)},del:function(parentViewId,$index){var _this=this;vm.confirm("确定要删除该行吗?").then(function(){vm.VIEWS[parentViewId].subviews.splice($index,1),$scope.$emit("listenAttrChange",{eventName:"delExtendRow",VIEWS:vm.VIEWS,parentViewId:parentViewId}),_this.count()})}},column:{add:function(lineViewId){var subviews=vm.VIEWS[lineViewId].subviews;if(subviews.length>=4)utils.error("已达到列数上限");else{var url=config.getAdminAPI("getTemplate").replace("{view_key}","layout_col");http(url).then(function(json){json=json.result,subviews.push(json.root_ids[0]),angular.extend(vm.VIEWS,json.views)})}},refreshAttrBox:function(lineViewId,columnViewId){vm.attrType="column",vm.refreshAttrBox(columnViewId,lineViewId,lineViewId)},del:function(parentViewId,$index){var subviews=vm.VIEWS[parentViewId].subviews;subviews.length<=1?utils.error("请至少保留一列"):vm.confirm("确定要删除该列吗?").then(function(){vm.VIEWS[parentViewId].subviews.splice($index,1),$scope.$emit("listenAttrChange",{eventName:"delColumn",VIEWS:vm.VIEWS,parentViewId:parentViewId})})}},unit:{refreshAttrBox:function(lineViewId,columnViewId,unitViewId){vm.attrType="unit",vm.refreshAttrBox(unitViewId,columnViewId,lineViewId)},del:function(parentViewId,$index,$event){$event.stopPropagation(),vm.confirm("确定要删除该控件吗?").then(function(){vm.currentLineViewId=null,vm.VIEWS[parentViewId].subviews.splice($index,1),$scope.$emit("listenAttrChange",{eventName:"delField",VIEWS:vm.VIEWS,parentViewId:parentViewId})})}},previewCallback:function(info){info.view_id=this.currentUnitViewId||this.currentLineViewId,$scope.$emit("listenAttrChange",{eventName:"changeAttr",info:info})}}),vm.init()}}})});