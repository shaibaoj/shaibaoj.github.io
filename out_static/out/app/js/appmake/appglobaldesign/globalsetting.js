"use strict";define(function(require){var app=require("app");require("common/directives/dingdone-fixed"),require("common/directives/dd_preview"),require("appPreview/index"),require("../services/appMakeService"),require("common/directives/superui/dingdone_widget"),require("appmake/page_design/services/page_design_service"),require("appmake/page_design/components_config"),app.controller("GlobalsettingCtrl",["$rootScope","$scope","$modal","$state","$stateParams","$timeout","navconfig","utils","config","http","appMakeService","$window","PageDesignService","componentsConfigService",function($rootScope,$scope,$modal,$state,$stateParams,$timeout,navconfig,utils,config,http,appMakeService,$window,PageDesignService,componentsConfigService){var vm=$scope.vm={};angular.extend(vm,{type:$stateParams.type,colorpickerOption:config.colorpickerDefault,init:function(){vm.guid=$stateParams.guid,this.initPageStyle(),this.collect_FormScheme()},collect_FormScheme:function(attribute_values){vm.loading=!1,vm.attribute_values=["navbar","page_style"],this.getFontList(),PageDesignService.getAttributeValues($stateParams.view_id).then(function(resp){vm.attr_obj=resp,A.forEach(vm.attr_obj,function(value,id){A.forEach(componentsConfigService.global_allViews,function(val){value.view==val&&("navbar"!=val&&"page_style"!=val&&vm.attribute_values.unshift(val),vm["attribute_values_"+value.view]=value,vm[value.view]=value,PageDesignService.getFormScheme(vm["attribute_values_"+value.view].view).then(function(res){vm["form_scheme_"+value.view]=res,vm[value.view]=res,"navbar"==value.view&&vm.initGlobalBar()}))})}),vm.currentFormScheme=vm.attribute_values[0],vm.currentFormSchemeIndex=0,vm._attribute_values=vm.attribute_values[0],vm.loading="complate"})},initPageStyle:function(){var url=config.getAPI("dropdownrefresh");http(url).then(function(json){vm.dropdownlist=json.result})},initGlobalBar:function(){vm.form_scheme_navbar[0].children.push({widget:"globalbar",attrs:{VIEWS:vm.attr_obj}})},tabForm:function(index,item){vm.currentFormSchemeIndex=index,vm.currentFormScheme=item,vm.fontselectindex=null},fontSelect:function(index){vm.fontselectindex=index,vm.currentFormSchemeIndex="",vm.currentFormScheme=""},getFontList:function(){vm.fontloading=!1;var url=config.getAPI("appglobaldesign.getfontlist").replace("{guid}",vm.guid);http(url).then(function(json){json.error_code?utils.error(json.error_message):(vm.fontlist=json.result,vm.initCurrentfont()),vm.fontloading="complate"})},initCurrentfont:function(){appMakeService.getAppBaseInfo(vm.guid).then(function(data){var tempFont=data.result.application.font||"";vm.dropdown=data.result.system_icons.loading.flag,angular.forEach(vm.fontlist,function(item,index){tempFont&&item.font==tempFont?vm.fonturl=item.id:""===tempFont&&(vm.fonturl=vm.fontlist[0].id)})})},selectFont:function(item){vm.fonturl=item.id,console.log("当前选中的字体",item,vm.fonturl),vm.selectFontId=item.id},getAttrs:function(){var url=config.getAPI("getmainui").replace("{guid}",vm.guid);http(url).then(function(json){json.error_code?utils.error(json.error_message):(vm.attrs=json.result.frontend_attibutes["mainui"==vm.type?"application":"module"],vm.mainuiname=json.result.main_ui.name,vm.getNgModels(),vm.loading="complete")})},getNgModels:function(){vm.attrValueObj={},angular.forEach(vm.attrs,function(group,groupIndex){var attributes=group.attributes;angular.forEach(attributes,function(attr,attrIndex){vm.attrValueObj[attr.attribute_id]=void 0})})},refreshValue:function(id,val){void 0!=vm.attrValueObj[id]&&(vm.isattrchange=!0),console.log("refreshValue"),vm.attrValueObj[id]=val;var obj={module_id:0,lui_attr_id:id,value:val};vm.previewParams=obj},back:function(){window.history.go(-1)},save:function(){vm.loading=!1;var url=config.getAPI("appglobaldesign.setting").replace("{guid}",vm.guid);return http(url,{method:"post",data:{views:vm.attr_obj,font:vm.fonturl,loading_flag:this.dropdown}}).then(function(data){vm.loading="complete",vm.designBroadcast(),vm.isattrchange=!1,utils.success("属性设置成功").then(function(){})})},designBroadcast:function(){$scope.$broadcast("designComplete")},initWatchAttr:function(){$scope.$watch("vm.attrValueObj",function(newvalue,old){console.log("watch vm.attrValueObj",newvalue,old)})},selectDorpDown:function(item){this.dropdown=item.flag}}),$scope.$on("checkApp",function(event,first_appinfo){vm.init()}),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(vm.isattrchange){event.preventDefault();var NProgress=require("nprogress");NProgress.done(),utils.confirm({headTitle:"设置提醒",msg:"是否保存属性修改?"},function(sure){var tostatename=toState.name;sure?vm.save().then(function(){$state.go(tostatename)}):(vm.isattrchange=!1,$state.go(tostatename))})}})}])});